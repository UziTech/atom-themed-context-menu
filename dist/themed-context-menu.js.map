{
  "version": 3,
  "sources": ["../src/main.ts", "../src/MenuItem.ts", "../src/ThemedContextMenu.ts", "../src/ContextElement.ts"],
  "sourcesContent": ["import { ThemedContextMenu } from \"./ThemedContextMenu\"\nimport { ContextElement } from \"./ContextElement\"\nconst tcm = new ThemedContextMenu()\n\nexport async function activate() {\n    console.log(\"hello!\")\n    hijackAllContextMenus()\n\n    // console.log(document)\n    // document.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"document\")\n    // })\n\n    // let selector: string = \"\"\n\n    // selector = \"body\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"body\")\n    // })\n\n    // selector = \"atom-workspace\"\n    // console.log(document.querySelector(selector))\n    // document\n    //     .querySelector(selector)\n    //     ?.addEventListener(\"contextMenu\", (e) => {\n    //         console.log(\"workspace\")\n    //     })\n\n    // selector = \"atom-workspace-axis\"\n    // console.log(document.querySelector(selector))\n    // document\n    //     .querySelector(selector)\n    //     ?.addEventListener(\"contextMenu\", (e) => {\n    //         console.log(\"workspace-axis\")\n    //     })\n\n    // selector = \"atom-panel-container.left\"\n    // console.log(document.querySelector(selector))\n    // document\n    //     .querySelector(selector)\n    //     ?.addEventListener(\"contextMenu\", (e) => {\n    //         console.log(\"panel .left\")\n    //     })\n\n    // selector = \"atom-dock.left\"\n    // console.log(document.querySelector(selector))\n    // document\n    //     .querySelector(selector)\n    //     ?.addEventListener(\"contextMenu\", (e) => {\n    //         console.log(\"caught!\")\n    //     })\n\n    // selector = \"div.atom-dock-inner.left\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-inner.left .atom-dock-mask\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-content-wrapper.left\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-content-wrapper.left atom-pane-container\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-content-wrapper.left atom-pane\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-content-wrapper.left atom-pane ul\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n\n    // selector = \".atom-dock-content-wrapper.left atom-pane ul li\"\n    // console.log(document.querySelector(selector))\n    // document.querySelector(selector)?.addEventListener(\"contextMenu\", (e) => {\n    //     console.log(\"caught!\")\n    // })\n}\n\nexport function deactivate() {}\n\nfunction hijackSingleContextMenu(domElement, items) {\n    // console.log(domElement)\n    domElement.addEventListener(\"contextmenu\", (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        // console.log(domElement, items)\n\n        tcm.displayContextMenu(e, items)\n    })\n}\n\nfunction hijackAllContextMenus() {\n    let contextMenuItems = (atom.contextMenu as any).itemSets\n    // .filter(\n    //     (item) => item.items.length > 1,\n    // )\n\n    let elemList: ContextElement[] = []\n    for (let i = 0; i < contextMenuItems.length; i++) {\n        let triggeringItem = contextMenuItems[i]\n        let domElems = document.querySelectorAll(triggeringItem.selector)\n        domElems.forEach((item) =>\n            elemList.push(new ContextElement(item, triggeringItem.items)),\n        )\n    }\n\n    elemList = pruneElements(elemList)\n\n    elemList.forEach((item) => hijackSingleContextMenu(item.elem, item.items))\n}\n\nfunction pruneElements(elements: ContextElement[]) {\n    for (let i = 0; i < elements.length; i++) {\n        for (let j = i + 1; j < elements.length; j++) {\n            if (elements[i].elem === elements[j].elem) {\n                console.log(\"deleted an element\")\n                elements[i].addItems(elements[j].items)\n                elements.splice(j, 1)\n            }\n        }\n    }\n    return elements\n}\n", "import EventEmitter from \"events\"\nimport { ContextMenuItem } from \"./types\"\nimport { ThemedContextMenu } from \"./ThemedContextMenu\"\n\nexport class MenuItem {\n    private element: HTMLHRElement | HTMLDivElement\n    private command?: string\n    private commandDetail?: string\n    private selected: boolean = false\n    private parent: ThemedContextMenu\n    private height: number\n\n    private constructor(\n        element: HTMLHRElement | HTMLDivElement,\n        parent: ThemedContextMenu,\n        height: number,\n    ) {\n        this.element = element\n        this.parent = parent\n        this.height = height\n\n        this.element.addEventListener(\"click\", (e) =>\n            this.onMouseClick(e as MouseEvent),\n        )\n    }\n\n    public static createMenuItem(\n        item: ContextMenuItem,\n        parent: ThemedContextMenu,\n    ) {\n        if (item.type === \"separator\") {\n            return new MenuItem(document.createElement(\"hr\"), parent, 7)\n        }\n\n        const divElem = document.createElement(\"div\")\n        divElem.classList.add(\"menu-item\")\n        const self = new MenuItem(divElem, parent, 23)\n\n        const menuItemName = document.createElement(\"span\")\n        menuItemName.classList.add(\"menu-item-name\")\n        menuItemName.innerHTML = item.label ? item.label : \"\"\n\n        const menuItemKey = document.createElement(\"span\")\n        menuItemKey.classList.add(\"menu-item-key\")\n\n        divElem.appendChild(menuItemName)\n        divElem.appendChild(menuItemKey)\n\n        if (item.command !== undefined) {\n            self.command = item.command\n            self.commandDetail = item.commandDetail\n\n            const keyStrokes = atom.keymaps.findKeyBindings({\n                command: item.command,\n            })\n            if (keyStrokes.length > 0) {\n                menuItemKey.innerHTML =\n                    keyStrokes[keyStrokes.length - 1].keystrokes\n            }\n        }\n\n        return self\n    }\n\n    public getElement() {\n        return this.element\n    }\n\n    public getHeight() {\n        return this.height\n    }\n\n    private onMouseClick(e: MouseEvent) {\n        e.stopPropagation()\n        this.execCommand()\n        this.parent.deleteContextMenu()\n    }\n\n    public async execCommand(): Promise<void> {\n        if (this.command === undefined) {\n            return\n        }\n\n        let target =\n            (atom.workspace.getActiveTextEditor() as any)?.getElement() ||\n            (atom.workspace.getActivePane() as any).getElement()\n\n        await (atom.commands as any).dispatch(\n            target,\n            this.command,\n            this.commandDetail,\n        )\n    }\n}\n", "import { MenuItem } from \"./MenuItem\"\nimport { MouseClick } from \"./types\"\n\nexport class ThemedContextMenu {\n    private activeContextMenu: HTMLDivElement\n    private height: number\n    private visible: boolean = false\n    private children: MenuItem[] = []\n    private lastClick: MouseClick | undefined\n\n    constructor() {\n        this.height = 0\n        let aws = document.querySelector(\"atom-workspace\")\n        aws?.addEventListener(\"click\", (e) =>\n            this.onMouseClick(e as MouseEvent),\n        )\n\n        this.activeContextMenu = document.createElement(\"div\")\n        this.activeContextMenu.classList.add(\"themed-context-menu\")\n        this.activeContextMenu.classList.add(\"invisible\")\n        aws?.appendChild(this.activeContextMenu)\n    }\n\n    displayContextMenu(e: MouseClick, items) {\n        if (this.lastClick !== undefined && this.lastClick !== e) {\n            this.deleteContextMenu()\n        }\n        console.log(this.children.length)\n        this.lastClick = e\n        this.activeContextMenu.classList.remove(\"invisible\")\n        // this.deleteContextMenu()\n\n        // this.activeContextMenu = document.createElement(\"div\")\n        // this.activeContextMenu.classList.add(\"themed-context-menu\")\n\n        items.forEach((element) => {\n            this.addChild(element)\n        })\n\n        this.activeContextMenu.setAttribute(\"style\", this.getPosition(e))\n    }\n\n    private addChild(item) {\n        const mitem = MenuItem.createMenuItem(item, this)\n        this.children.push(mitem)\n        this.activeContextMenu?.appendChild(mitem.getElement())\n        // this.height += mitem.getHeight()\n    }\n\n    private onMouseClick(e) {\n        this.deleteContextMenu()\n    }\n\n    private getPosition(e: MouseClick) {\n        let x = e.clientX + 10 + 5\n        let y = e.clientY + 5\n\n        x = Math.min(x, window.innerWidth - 310)\n        y = Math.min(y, window.innerHeight - this.getHeight() - 10)\n\n        return \"top:\" + y + \"px; left:\" + x + \"px\"\n    }\n\n    private getHeight(): number {\n        return this.children\n            .map((item) => item.getHeight())\n            .reduce(function (a, b) {\n                return a + b\n            })\n    }\n\n    deleteContextMenu() {\n        // if (this.activeContextMenu) {\n        //     this.activeContextMenu.remove()\n        this.height = 0\n        this.visible = false\n        this.children = []\n        this.activeContextMenu.classList.add(\".invisible\")\n        this.lastClick = undefined\n        this.removeAllChildNodes()\n        // }\n    }\n\n    removeAllChildNodes() {\n        while (this.activeContextMenu.firstChild) {\n            this.activeContextMenu.removeChild(\n                this.activeContextMenu.firstChild,\n            )\n        }\n    }\n}\n", "import { ContextMenuItem } from \"./types\"\n\nexport class ContextElement {\n    elem: HTMLElement\n    items: ContextMenuItem[]\n\n    constructor(elem, items) {\n        this.elem = elem\n        this.items = items\n    }\n\n    addItems(items) {\n        items.forEach((element) => this.addItem(element))\n    }\n\n    private addItem(newItem) {\n        if (newItem.type) {\n            if (!this.items[this.items.length - 1].type) {\n                this.items.push(newItem)\n            }\n        } else {\n            let similarComms = this.items.filter(\n                (item) => item.command === newItem.command,\n            )\n            if (similarComms.length === 0) {\n                this.items.push(newItem)\n            }\n        }\n    }\n}\n"],
  "mappings": "gIAAA,wDCIO,WAAe,CAQV,YACJ,EACA,EACA,EACF,CARM,cAAoB,GASxB,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,OAAS,EAEd,KAAK,QAAQ,iBAAiB,QAAS,AAAC,GACpC,KAAK,aAAa,UAIZ,gBACV,EACA,EACF,CACE,GAAI,EAAK,OAAS,YACd,MAAO,IAAI,GAAS,SAAS,cAAc,MAAO,EAAQ,GAG9D,GAAM,GAAU,SAAS,cAAc,OACvC,EAAQ,UAAU,IAAI,aACtB,GAAM,GAAO,GAAI,GAAS,EAAS,EAAQ,IAErC,EAAe,SAAS,cAAc,QAC5C,EAAa,UAAU,IAAI,kBAC3B,EAAa,UAAY,EAAK,MAAQ,EAAK,MAAQ,GAEnD,GAAM,GAAc,SAAS,cAAc,QAM3C,GALA,EAAY,UAAU,IAAI,iBAE1B,EAAQ,YAAY,GACpB,EAAQ,YAAY,GAEhB,EAAK,UAAY,OAAW,CAC5B,EAAK,QAAU,EAAK,QACpB,EAAK,cAAgB,EAAK,cAE1B,GAAM,GAAa,KAAK,QAAQ,gBAAgB,CAC5C,QAAS,EAAK,UAElB,AAAI,EAAW,OAAS,GACpB,GAAY,UACR,EAAW,EAAW,OAAS,GAAG,YAI9C,MAAO,GAGJ,YAAa,CAChB,MAAO,MAAK,QAGT,WAAY,CACf,MAAO,MAAK,OAGR,aAAa,EAAe,CAChC,EAAE,kBACF,KAAK,cACL,KAAK,OAAO,yBAGH,cAA6B,CA9E9C,MA+EQ,GAAI,KAAK,UAAY,OACjB,OAGJ,GAAI,GACC,SAAK,UAAU,wBAAf,cAA8C,eAC9C,KAAK,UAAU,gBAAwB,aAE5C,KAAO,MAAK,SAAiB,SACzB,EACA,KAAK,QACL,KAAK,iBCvFV,WAAwB,CAO3B,aAAc,CAJN,aAAmB,GACnB,cAAuB,GAI3B,KAAK,OAAS,EACd,GAAI,GAAM,SAAS,cAAc,kBACjC,WAAK,iBAAiB,QAAS,AAAC,GAC5B,KAAK,aAAa,IAGtB,KAAK,kBAAoB,SAAS,cAAc,OAChD,KAAK,kBAAkB,UAAU,IAAI,uBACrC,KAAK,kBAAkB,UAAU,IAAI,aACrC,WAAK,YAAY,KAAK,mBAG1B,mBAAmB,EAAe,EAAO,CACrC,AAAI,KAAK,YAAc,QAAa,KAAK,YAAc,GACnD,KAAK,oBAET,QAAQ,IAAI,KAAK,SAAS,QAC1B,KAAK,UAAY,EACjB,KAAK,kBAAkB,UAAU,OAAO,aAMxC,EAAM,QAAQ,AAAC,GAAY,CACvB,KAAK,SAAS,KAGlB,KAAK,kBAAkB,aAAa,QAAS,KAAK,YAAY,IAG1D,SAAS,EAAM,CA1C3B,MA2CQ,GAAM,GAAQ,EAAS,eAAe,EAAM,MAC5C,KAAK,SAAS,KAAK,GACnB,QAAK,oBAAL,QAAwB,YAAY,EAAM,cAItC,aAAa,EAAG,CACpB,KAAK,oBAGD,YAAY,EAAe,CAC/B,GAAI,GAAI,EAAE,QAAU,GAAK,EACrB,EAAI,EAAE,QAAU,EAEpB,SAAI,KAAK,IAAI,EAAG,OAAO,WAAa,KACpC,EAAI,KAAK,IAAI,EAAG,OAAO,YAAc,KAAK,YAAc,IAEjD,OAAS,EAAI,YAAc,EAAI,KAGlC,WAAoB,CACxB,MAAO,MAAK,SACP,IAAI,AAAC,GAAS,EAAK,aACnB,OAAO,SAAU,EAAG,EAAG,CACpB,MAAO,GAAI,IAIvB,mBAAoB,CAGhB,KAAK,OAAS,EACd,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,kBAAkB,UAAU,IAAI,cACrC,KAAK,UAAY,OACjB,KAAK,sBAIT,qBAAsB,CAClB,KAAO,KAAK,kBAAkB,YAC1B,KAAK,kBAAkB,YACnB,KAAK,kBAAkB,cCpFhC,WAAqB,CAIxB,YAAY,EAAM,EAAO,CACrB,KAAK,KAAO,EACZ,KAAK,MAAQ,EAGjB,SAAS,EAAO,CACZ,EAAM,QAAQ,AAAC,GAAY,KAAK,QAAQ,IAGpC,QAAQ,EAAS,CACrB,AAAI,EAAQ,KACH,KAAK,MAAM,KAAK,MAAM,OAAS,GAAG,MACnC,KAAK,MAAM,KAAK,GAMhB,AAHe,KAAK,MAAM,OAC1B,AAAC,GAAS,EAAK,UAAY,EAAQ,SAEtB,SAAW,GACxB,KAAK,MAAM,KAAK,KHvBhC,GAAM,GAAM,GAAI,GAEhB,kBAAiC,CAC7B,QAAQ,IAAI,UACZ,IA0FG,YAAsB,EAE7B,WAAiC,EAAY,EAAO,CAEhD,EAAW,iBAAiB,cAAe,AAAC,GAAM,CAC9C,EAAE,iBACF,EAAE,kBAGF,EAAI,mBAAmB,EAAG,KAIlC,YAAiC,CAC7B,GAAI,GAAoB,KAAK,YAAoB,SAK7C,EAA6B,GACjC,OAAS,GAAI,EAAG,EAAI,EAAiB,OAAQ,IAAK,CAC9C,GAAI,GAAiB,EAAiB,GAEtC,AADe,SAAS,iBAAiB,EAAe,UAC/C,QAAQ,AAAC,GACd,EAAS,KAAK,GAAI,GAAe,EAAM,EAAe,SAI9D,EAAW,EAAc,GAEzB,EAAS,QAAQ,AAAC,GAAS,EAAwB,EAAK,KAAM,EAAK,QAGvE,WAAuB,EAA4B,CAC/C,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,OAAS,GAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IACrC,AAAI,EAAS,GAAG,OAAS,EAAS,GAAG,MACjC,SAAQ,IAAI,sBACZ,EAAS,GAAG,SAAS,EAAS,GAAG,OACjC,EAAS,OAAO,EAAG,IAI/B,MAAO",
  "names": []
}
