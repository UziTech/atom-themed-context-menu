{
  "version": 3,
  "sources": ["../src/main.ts", "../src/MenuItem.ts", "../src/Menu.ts", "../src/ThemedContextMenu.ts"],
  "sourcesContent": ["import { ThemedContextMenu } from \"./ThemedContextMenu\"\n\nlet tcm = new ThemedContextMenu()\n\nexport function activate() {\n    tcm.hijackFunction()\n}\n\nexport function deactivate() {\n    tcm.releaseFunction()\n}\n", "import EventEmitter from 'events';\nimport { ContextMenuItemInterface } from './types';\nimport { ThemedContextMenu } from './ThemedContextMenu';\nimport { Menu } from './Menu';\n\n// handler for the items shown in the context menu, be it a separator or a command\nexport class MenuItem {\n    private element: HTMLHRElement | HTMLDivElement;\n    private command?: string;\n    private commandDetail?: string;\n    private selected: boolean = false;\n    private parent: Menu;\n    private height: number;\n\n    private constructor(\n        element: HTMLHRElement | HTMLDivElement,\n        parent: Menu,\n        height: number,\n    ) {\n        this.element = element;\n        this.parent = parent;\n        this.height = height;\n\n        this.element.addEventListener('click', (e) =>\n            this.onMouseClick(e as MouseEvent),\n        );\n    }\n\n    // static function wrapper to create a MenuItem object from a ContextMenuItemInterface object\n    public static createMenuItem(\n        item: ContextMenuItemInterface,\n        parent: Menu,\n    ): MenuItem {\n        // early return for separators\n        if (item.type === 'separator') {\n            return new MenuItem(document.createElement('hr'), parent, 7);\n        }\n\n        // create base menu item div element and create menu item object from base div\n        const divElem = document.createElement('div');\n        divElem.classList.add('menu-item');\n        const self = new MenuItem(divElem, parent, 23);\n\n        // create menu item label span\n        const menuItemName = document.createElement('span');\n        menuItemName.classList.add('menu-item-name');\n        // if it doesnt have a label, what is it?\n        // i guess a separator wont have a label, but other than that?\n        // should i add an early return case for this?\n        menuItemName.innerHTML = item.label ? item.label : '';\n\n        // create menu item key stroke span\n        const menuItemKey = document.createElement('span');\n        menuItemKey.classList.add('menu-item-key');\n\n        // append menu item elements to base menu item div\n        divElem.appendChild(menuItemName);\n        divElem.appendChild(menuItemKey);\n\n        // if it doesnt have a command it might be a submenu\n        if (item.command !== undefined) {\n            // add command data to menu item object\n            self.command = item.command;\n            self.commandDetail = item.commandDetail;\n\n            // if it has a command, it might have a keymap, so search for it\n            const keyStrokes = atom.keymaps.findKeyBindings({\n                command: item.command,\n            });\n\n            // if it has a keymap, add it to the item key span element\n            if (keyStrokes.length > 0) {\n                menuItemKey.innerHTML =\n                    keyStrokes[keyStrokes.length - 1].keystrokes;\n            }\n        }\n\n        return self;\n    }\n\n    // on click, execute command and hide the context menu\n    private onMouseClick(e: MouseEvent) {\n        e.stopPropagation();\n        this.execCommand();\n        this.parent.deleteContextMenu();\n    }\n\n    private async execCommand(): Promise<void> {\n        if (this.command === undefined) {\n            return;\n        }\n\n        let target =\n            (atom.workspace.getActiveTextEditor() as any)?.getElement() ||\n            (atom.workspace.getActivePane() as any).getElement();\n\n        await (atom.commands as any).dispatch(\n            target,\n            this.command,\n            this.commandDetail,\n        );\n    }\n\n    public getElement(): HTMLElement {\n        return this.element;\n    }\n\n    public getHeight(): number {\n        return this.height;\n    }\n}\n", "import { MenuItem } from './MenuItem';\nimport { ThemedContextMenu } from './ThemedContextMenu';\nimport { ContextMenuItemInterface, MousePosition } from './types';\n\nexport class Menu {\n    private visible: boolean = true;\n    private children: MenuItem[] = [];\n    private domElement: HTMLElement;\n    private tcm: ThemedContextMenu;\n\n    constructor(\n        e: MousePosition,\n        items: ContextMenuItemInterface[],\n        visible: boolean,\n        tcm: ThemedContextMenu,\n    ) {\n        this.tcm = tcm;\n        this.domElement = document.createElement('div');\n        this.domElement.classList.add('submenu');\n\n        if (!visible) {\n            this.visible = false;\n            this.domElement.classList.add('invisible');\n        }\n\n        // add context menu items to context menu\n        items.forEach((element) => {\n            this.addChild(element);\n        });\n        console.log(items);\n        // move context menu position to mouse event position\n        this.domElement.setAttribute('style', this.getPositionStyleString(e));\n\n        tcm.appendChild(this.domElement);\n    }\n\n    public deleteContextMenu() {\n        this.tcm.deleteContextMenu();\n    }\n\n    // generates a style string that positions the context menu next to\n    // mouse event, while also preventing it from overflowing\n    private getPositionStyleString(e: MousePosition): string {\n        let x = e.clientX + 10 + 5;\n        let y = e.clientY + 5;\n\n        x = Math.min(x, window.innerWidth - 310);\n        y = Math.min(y, window.innerHeight - this.getHeight() - 10);\n\n        return 'top:' + y + 'px; left:' + x + 'px';\n    }\n\n    // adds a context menu item to context menu\n    private addChild(item: ContextMenuItemInterface): void {\n        const mitem = MenuItem.createMenuItem(item, this);\n        this.children.push(mitem);\n        this.domElement.appendChild(mitem.getElement());\n    }\n\n    // calculate context menu height for positioning function\n    private getHeight(): number {\n        return this.children\n            .map((item) => item.getHeight())\n            .reduce(function (a, b) {\n                return a + b;\n            });\n    }\n\n    private removeAllChildNodes() {\n        while (this.domElement.firstChild) {\n            this.domElement.removeChild(this.domElement.firstChild);\n        }\n    }\n}\n", "import { Menu } from './Menu';\nimport { ContextMenuItemInterface, MousePosition } from './types';\n\nexport class ThemedContextMenu {\n    private hijackedFunction: Function | undefined;\n    private container: HTMLElement;\n\n    constructor() {\n        // add click listener to clear the context menu\n        // document.addEventListener('click', (e) =>\n        // this.onMouseClick(e as MouseEvent),\n        // );\n\n        // create the context menu, but make it invisible\n        this.container = document.createElement('div');\n        this.container.classList.add('themed-context-menu');\n        // this.activeContextMenu.classList.add('invisible');\n\n        let aws = document.querySelector('atom-workspace');\n        aws?.appendChild(this.container);\n    }\n\n    // hijack context menu event function\n    hijackFunction() {\n        let contextMenuManager = atom.contextMenu as any;\n        this.hijackedFunction = contextMenuManager.showForEvent;\n        contextMenuManager.showForEvent = (e) => {\n            let data = contextMenuManager.templateForEvent(e);\n            this.displayContextMenu(e, data);\n        };\n    }\n\n    // release context menu event function\n    releaseFunction() {\n        let contextMenuManager = atom.contextMenu as any;\n        contextMenuManager.showForEvent = this.hijackedFunction;\n    }\n\n    displayContextMenu(e: MousePosition, items: ContextMenuItemInterface[]) {\n        this.deleteContextMenu();\n\n        new Menu(e, items, true, this);\n    }\n\n    appendChild(child: HTMLElement) {\n        this.container.appendChild(child);\n    }\n\n    private onMouseClick(e) {\n        this.deleteContextMenu();\n    }\n\n    deleteContextMenu() {\n        while (this.container.firstChild) {\n            this.container.removeChild(this.container.firstChild);\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
