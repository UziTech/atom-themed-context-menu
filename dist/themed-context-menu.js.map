{
  "version": 3,
  "sources": ["../src/main.ts", "../src/MenuItem.ts", "../src/ThemedContextMenu.ts"],
  "sourcesContent": ["import { ThemedContextMenu } from \"./ThemedContextMenu\"\nconst tcm = new ThemedContextMenu()\n\nexport async function activate() {\n    console.log(\"hello!\")\n    let contextMenuItems = (atom.contextMenu as any).itemSets.filter(\n        (item) => item.items.length > 1,\n    )\n    let triggeringItem = contextMenuItems[0]\n\n    let domElems = document.querySelectorAll(triggeringItem.selector)\n    domElems.forEach((item) => hijackContextMenu(item, triggeringItem.items))\n}\n\nexport function deactivate() {}\n\nfunction hijackContextMenu(domElement, items) {\n    domElement.addEventListener(\"contextmenu\", (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        console.log(items)\n\n        tcm.createContextMenu(e, items)\n    })\n}\n", "import EventEmitter from \"events\"\nimport { ContextMenuItem } from \"./types\"\nimport { ThemedContextMenu } from \"./ThemedContextMenu\"\n\nexport class MenuItem {\n    private element: HTMLHRElement | HTMLDivElement\n    private command?: string\n    private commandDetail?: string\n    private emitter: EventEmitter\n    private selected: boolean = false\n    private parent: ThemedContextMenu\n\n    private constructor(\n        element: HTMLHRElement | HTMLDivElement,\n        parent: ThemedContextMenu,\n    ) {\n        this.element = element\n        this.parent = parent\n        this.emitter = new EventEmitter()\n\n        // this.emitter.on(TbrEvent.MOUSE_ENTER, (...args) =>\n        //     this.onSubItemMouseEnter(args[0], args[1]),\n        // )\n\n        this.element.addEventListener(\"click\", (e) =>\n            this.onMouseClick(e as MouseEvent),\n        )\n    }\n\n    public static createMenuItem(\n        item: ContextMenuItem,\n        parent: ThemedContextMenu,\n    ) {\n        if (item.type === \"separator\") {\n            return new MenuItem(document.createElement(\"hr\"), parent)\n        }\n\n        const divElem = document.createElement(\"div\")\n        divElem.classList.add(\"menu-item\")\n        const self = new MenuItem(divElem, parent)\n\n        const menuItemName = document.createElement(\"span\")\n        menuItemName.classList.add(\"menu-item-name\")\n        menuItemName.innerHTML = item.label ? item.label : \"\"\n\n        const menuItemKey = document.createElement(\"span\")\n        menuItemKey.classList.add(\"menu-item-key\")\n\n        divElem.appendChild(menuItemName)\n        divElem.appendChild(menuItemKey)\n\n        if (item.command !== undefined) {\n            self.command = item.command\n            // self.commandDetail = item.commandDetail\n\n            const keyStrokes = atom.keymaps.findKeyBindings({\n                command: item.command,\n            })\n            if (keyStrokes.length > 0) {\n                menuItemKey.innerHTML =\n                    keyStrokes[keyStrokes.length - 1].keystrokes\n            }\n        }\n\n        return self\n    }\n\n    public getElement() {\n        return this.element\n    }\n\n    private onMouseClick(e: MouseEvent) {\n        // e.stopPropagation()\n        this.execCommand()\n        this.parent.deleteContextMenu()\n    }\n\n    private onSubItemMouseEnter(target: MenuItem, e: MouseEvent): void {\n        // this.submenu?.forEach((o) => {\n        //     o.setOpen(false);\n        //     o.setSelected(false);\n        // });\n        // target.setSelected(true);\n        // target.setOpen(true);\n    }\n\n    public async execCommand(): Promise<void> {\n        if (this.command === undefined) {\n            return\n        }\n\n        let target =\n            (atom.workspace.getActiveTextEditor() as any)?.getElement() ||\n            (atom.workspace.getActivePane() as any).getElement()\n\n        await (atom.commands as any).dispatch(\n            target,\n            this.command,\n            this.commandDetail,\n        )\n    }\n}\n", "import { MenuItem } from \"./MenuItem\"\n\nexport class ThemedContextMenu {\n    private screenWrapper: HTMLDivElement\n    private activeContextMenu: HTMLDivElement | undefined\n\n    constructor() {\n        this.screenWrapper = document.createElement(\"div\")\n        this.screenWrapper.classList.add(\"themed-context-menu-container\")\n        this.screenWrapper.classList.add(\"not-active\")\n\n        this.screenWrapper.addEventListener(\"click\", (e) =>\n            this.onMouseClick(e as MouseEvent),\n        )\n\n        document\n            .querySelector(\"atom-workspace\")\n            ?.appendChild(this.screenWrapper)\n    }\n\n    createContextMenu(e, items) {\n        this.deleteContextMenu()\n        this.screenWrapper.classList.remove(\"not-active\")\n\n        this.activeContextMenu = document.createElement(\"div\")\n        this.activeContextMenu.classList.add(\"themed-context-menu\")\n\n        for (let i = 0; i < items.length; i++) {\n            this.activeContextMenu.appendChild(\n                MenuItem.createMenuItem(items[i], this).getElement(),\n            )\n        }\n\n        this.activeContextMenu.setAttribute(\n            \"style\",\n            \"top:\" + e.clientY + \"px; left:\" + (e.clientX + 10) + \"px\",\n        )\n        this.screenWrapper.appendChild(this.activeContextMenu)\n    }\n\n    onMouseClick(e) {\n        e.stopPropagation()\n        this.deleteContextMenu()\n    }\n\n    deleteContextMenu() {\n        if (this.activeContextMenu) {\n            this.activeContextMenu.remove()\n            this.screenWrapper.classList.add(\"not-active\")\n        }\n    }\n}\n"],
  "mappings": "+gBAAA,wDCAA,MAAyB,qBAIlB,OAAe,CAQV,YACJ,EACA,EACF,CANM,cAAoB,GAOxB,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,QAAU,GAAI,WAMnB,KAAK,QAAQ,iBAAiB,QAAS,AAAC,GACpC,KAAK,aAAa,UAIZ,gBACV,EACA,EACF,CACE,GAAI,EAAK,OAAS,YACd,MAAO,IAAI,GAAS,SAAS,cAAc,MAAO,GAGtD,GAAM,GAAU,SAAS,cAAc,OACvC,EAAQ,UAAU,IAAI,aACtB,GAAM,GAAO,GAAI,GAAS,EAAS,GAE7B,EAAe,SAAS,cAAc,QAC5C,EAAa,UAAU,IAAI,kBAC3B,EAAa,UAAY,EAAK,MAAQ,EAAK,MAAQ,GAEnD,GAAM,GAAc,SAAS,cAAc,QAM3C,GALA,EAAY,UAAU,IAAI,iBAE1B,EAAQ,YAAY,GACpB,EAAQ,YAAY,GAEhB,EAAK,UAAY,OAAW,CAC5B,EAAK,QAAU,EAAK,QAGpB,GAAM,GAAa,KAAK,QAAQ,gBAAgB,CAC5C,QAAS,EAAK,UAElB,AAAI,EAAW,OAAS,GACpB,GAAY,UACR,EAAW,EAAW,OAAS,GAAG,YAI9C,MAAO,GAGJ,YAAa,CAChB,MAAO,MAAK,QAGR,aAAa,EAAe,CAEhC,KAAK,cACL,KAAK,OAAO,oBAGR,oBAAoB,EAAkB,EAAqB,OAStD,cAA6B,CAtF9C,MAuFQ,GAAI,KAAK,UAAY,OACjB,OAGJ,GAAI,GACC,SAAK,UAAU,wBAAf,cAA8C,eAC9C,KAAK,UAAU,gBAAwB,aAE5C,KAAO,MAAK,SAAiB,SACzB,EACA,KAAK,QACL,KAAK,iBChGV,WAAwB,CAI3B,aAAc,CANlB,MAOQ,KAAK,cAAgB,SAAS,cAAc,OAC5C,KAAK,cAAc,UAAU,IAAI,iCACjC,KAAK,cAAc,UAAU,IAAI,cAEjC,KAAK,cAAc,iBAAiB,QAAS,AAAC,GAC1C,KAAK,aAAa,IAGtB,YACK,cAAc,oBADnB,QAEM,YAAY,KAAK,eAG3B,kBAAkB,EAAG,EAAO,CACxB,KAAK,oBACL,KAAK,cAAc,UAAU,OAAO,cAEpC,KAAK,kBAAoB,SAAS,cAAc,OAChD,KAAK,kBAAkB,UAAU,IAAI,uBAErC,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAC9B,KAAK,kBAAkB,YACnB,EAAS,eAAe,EAAM,GAAI,MAAM,cAIhD,KAAK,kBAAkB,aACnB,QACA,OAAS,EAAE,QAAU,YAAe,GAAE,QAAU,IAAM,MAE1D,KAAK,cAAc,YAAY,KAAK,mBAGxC,aAAa,EAAG,CACZ,EAAE,kBACF,KAAK,oBAGT,mBAAoB,CAChB,AAAI,KAAK,mBACL,MAAK,kBAAkB,SACvB,KAAK,cAAc,UAAU,IAAI,iBF/C7C,GAAM,GAAM,GAAI,GAEhB,kBAAiC,CAC7B,QAAQ,IAAI,UAIZ,GAAI,GAAiB,AAHG,KAAK,YAAoB,SAAS,OACtD,AAAC,GAAS,EAAK,MAAM,OAAS,GAEI,GAGtC,AADe,SAAS,iBAAiB,EAAe,UAC/C,QAAQ,AAAC,GAAS,EAAkB,EAAM,EAAe,QAG/D,YAAsB,EAE7B,WAA2B,EAAY,EAAO,CAC1C,EAAW,iBAAiB,cAAe,AAAC,GAAM,CAC9C,EAAE,iBACF,EAAE,kBACF,QAAQ,IAAI,GAEZ,EAAI,kBAAkB,EAAG",
  "names": []
}
